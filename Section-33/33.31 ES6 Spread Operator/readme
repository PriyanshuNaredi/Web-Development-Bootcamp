# ES6 Spread Operator

The spread syntax `...` allows an iterable such as an array or string to be expanded in places where zero or more arguments (for function calls) or elements (for array literals) are expected, or an object expression to be expanded in places where zero or more key-value pairs (for object literals) are expected.

## Examples

### Spread in Function Calls
```javascript
function sum(x, y, z) {
  return x + y + z;
}
const numbers = [1, 2, 3];
console.log(sum(...numbers)); // Output: 6
```

### Spread in Array Literals
```javascript
const arr1 = [1, 2, 3];
const arr2 = [...arr1, 4, 5, 6];
console.log(arr2); // Output: [1, 2, 3, 4, 5, 6]
```

### Spread in Object Literals
```javascript
const obj1 = { a: 1, b: 2 };
const obj2 = { ...obj1, c: 3 };
console.log(obj2); // Output: { a: 1, b: 2, c: 3 }
```

# Setting Object Key by Variable

In JavaScript, you can set an object key using a variable by utilizing the computed property names feature.

## Example
```javascript
const key = 'name';
const value = 'John Doe';

const obj = {
  [key]: value
};

console.log(obj); // Output: { name: 'John Doe' }
```

For more information, you can refer to the following resources:
- [MDN Web Docs: Spread syntax](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax)
- [Stack Overflow: Set object key by variable](https://stackoverflow.com/questions/11508463/javascript-set-object-key-by-variable?noredirect=1&lq=1)
